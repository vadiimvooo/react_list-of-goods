{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleClickSortByAlphabet","setState","ALPHABET","handleClickSortByLength","LENGTH","handleClickReverse","handleClickReset","this","visibleGoods","goods","sort","firstGood","secondGood","localeCompare","Number","length","reverse","console","log","getReorderedGoods","isButtonVisible","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,0BAA4B,WAC1B,EAAKC,SAAS,CACZH,SAAUL,EAASS,YARzB,EAYEC,wBAA0B,WACxB,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,mBAAqB,WACnB,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,EAwBES,iBAAmB,WACjB,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WAEZW,EApEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOC,GAqBzB,OAnBAD,EAAaE,MAAK,SAACC,EAAWC,GAC5B,OAAId,IAAaL,EAASS,SACjBS,EAAUE,cAAcD,GAG7Bd,IAAaL,EAASW,OACjBU,OAAOH,EAAUI,QAAUD,OAAOF,EAAWG,QAG/C,KAGLlB,GACFW,EAAaQ,UAIfC,QAAQC,IAAIpB,EAAUD,GAEfW,EA2CgBW,CAAkBzB,EAAiBa,KAAKX,OACvDwB,EAAkBvB,GAAcC,IAAaL,EAASM,KAE5D,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYzB,IAAaL,EAASS,WAEtCsB,QAASjB,KAAKP,0BANhB,iCAWA,wBACEsB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYzB,IAAaL,EAASW,SAEtCoB,QAASjB,KAAKJ,wBANhB,4BAWA,wBACEmB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAa1B,IAEjB2B,QAASjB,KAAKF,mBANhB,qBAWCe,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASjB,KAAKD,iBAHhB,sBAWJ,6BACE,6BACGE,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAxFtC,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4078a4a8.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    if (sortType === SortType.ALPHABET) {\n      return firstGood.localeCompare(secondGood);\n    }\n\n    if (sortType === SortType.LENGTH) {\n      return Number(firstGood.length) - Number(secondGood.length);\n    }\n\n    return 0;\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleClickSortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleClickSortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleClickReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleClickReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n    const isButtonVisible = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.handleClickSortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.handleClickSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.handleClickReverse}\n          >\n            Reverse\n          </button>\n\n          {isButtonVisible && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleClickReset}\n\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}